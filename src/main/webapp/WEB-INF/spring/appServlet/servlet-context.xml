<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="
        http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd">

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />	
		
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->	 
	<resources mapping="/resources/**" location="/resources/" />
	
    <!-- Mail service -->
	<beans:bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	    <beans:property name="host" value="smtp.gmail.com"/>
	    <beans:property name="port" value="465"/>
	    <beans:property name="protocol" value="smtps"/>
	    <beans:property name="username" value="info@platybox.com"/>
	    <beans:property name="password" value="tOr,g!Kl9KQO5"/>
	    <beans:property name="javaMailProperties">
	        <beans:props>
	            <beans:prop key="mail.smtp.auth">true</beans:prop>
	            <beans:prop key="mail.smtp.ssl.enable">true</beans:prop>
	            <beans:prop key="mail.smtp.debug">true</beans:prop>
	        </beans:props>
	    </beans:property>
	</beans:bean>
	 
	<beans:bean id="emailManager" class="com.platybox.email.PlatyboxEmailManager">
  		<beans:property name="mailSender" ref="mailSender"/>
  		<!-- <beans:property name="templateMessage" ref="templateMessage"/> -->
  		<beans:property name="velocityEngine" ref="velocityEngine"/>
	</beans:bean>
	<beans:bean id="velocityEngine" class="org.springframework.ui.velocity.VelocityEngineFactoryBean">
      <beans:property name="velocityProperties">
	        <beans:props>
	            <beans:prop key="resource.loader">class</beans:prop>
	            <beans:prop key="class.resource.loader.class">org.apache.velocity.runtime.resource.loader.ClasspathResourceLoader</beans:prop>
	        </beans:props>
	    </beans:property>
   </beans:bean>
	
	
	<!--  Multipart support: file upload for images-->
	<beans:bean id="multipartResolver"
    class="org.springframework.web.multipart.commons.CommonsMultipartResolver">

    <!-- one of the properties available; the maximum file size in bytes -->
    <beans:property name="maxUploadSize" value="2000000"/>
   </beans:bean>
   
		
	<!-- Exception handling (aka failwhale) -->
	<beans:bean class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerExceptionResolver">
		<beans:property name="order" value="1"/> 
	</beans:bean>		
	<beans:bean class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
	   <beans:property name="order" value="2"/> 
	   <beans:property name="defaultErrorView" value="GenericExceptionPage"/> 	
	   <beans:property name="exceptionMappings">
	     <beans:props>			
		  	<beans:prop key="com.platybox.exception.GenericException">GenericExceptionPage</beans:prop>
	      	<beans:prop key="java.lang.Exception">GenericExceptionPage</beans:prop>	     
	      	<beans:prop key="org.springframework.web.multipart.MaxUploadSizeExceededException">settingsprofile</beans:prop>
	     </beans:props>
	   </beans:property>
	</beans:bean>
 	
	<!-- Tiles configurations  -->
	<beans:bean id="tilesConfigurer" 
				class="org.springframework.web.servlet.view.tiles2.TilesConfigurer">
    <beans:property name="definitions">
        <beans:list>
            <beans:value>/WEB-INF/layouts/tiles.xml</beans:value>
            <beans:value>/WEB-INF/views/**/tiles.xml</beans:value>	
        </beans:list>
    </beans:property>
	</beans:bean>
	
	<beans:bean id="tilesViewResolver"
				class="org.springframework.web.servlet.view.UrlBasedViewResolver">
		<beans:property name="requestContextAttribute" value="requestContext"/>
		<beans:property name="viewClass" value="org.springframework.web.servlet.view.tiles2.TilesView"/>
	</beans:bean>
	
	<!-- Imports user-defined @Controller beans that process client requests -->
	<beans:import resource="controllers.xml" />
	<beans:import resource="spring-scheduler.xml" />
	
</beans:beans>
